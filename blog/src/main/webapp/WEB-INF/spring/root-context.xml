<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		<!-- Root Context: defines shared resources visible to all other web components -->
	
	<util:properties id="property" location="classpath:/config/blog.properties" />
	
	
	
	  <bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="#{property['jdbc.driverClassName']}" />
		<property name="url" value="#{property['jdbc.url']}" />
		<property name="username" value="#{property['jdbc.username']}" />
		<property name="password" value="#{property['jdbc.password']}" />

		<property name="maxActive" value="1000" />
		<property name="maxIdle" value="100" />
		<property name="maxWait" value="-1" />
		
		<property name="validationQuery" value="select 1 from dual" />
    </bean>
    
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="dataSourceSpied" />
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="loggingType" value="MULTI_LINE" />
                <property name="sqlPrefix" value="SQL : " />
            </bean>
        </property>
    </bean>


   <!-- 마이바티스 연동 부분 : 마이바티스 sqlsession을 factory에서 만듬-->
   <bean class="org.mybatis.spring.SqlSessionFactoryBean"
      id="sqlSessionFactory">
     	 <property name="dataSource" ref="dataSource" />
      	<property name="configLocation" value="classpath:context/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/blog/yeonji/*/*/mapper/*Mapper*.xml</value>
			</list>
		</property>

   </bean>
   
   	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.blog.yeonji.*.*.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>


   <!--SqlSessionTemplate는 마이바티스 스프링 연동모듈의 핵심이다. 
      SqlSessionTemplate은 SqlSession을 구현하고 코드에서 SqlSession을 대체하는 역할을 한다.
      SqlSessionTemplate은 쓰레드에 안전하고 여러개의 DAO나 
      매퍼에서 공유할 수 있고 필요한 시점에 세션을 닫고 커밋하거나 롤백하는것을 포함한 세션의 생명주기를 관리한다. -->
   <bean class="org.mybatis.spring.SqlSessionTemplate"
   id="sqlSessionTemplate">
   <!-- index : 몇번째 생성자인지 -->
      <constructor-arg ref="sqlSessionFactory" index="0"></constructor-arg>
   </bean>
   
   
   <!-- 트랜잭션 처리 -->
   <bean id="transactionManager"
   class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <constructor-arg ref="dataSource"></constructor-arg>
   </bean>
   
   
   
   
   
   <!-- 빈의 이름이 정해져 있습니다. -->
   <!-- 파일 업로드 설정 id값을 꼭 일치시켜야 합니다.
       id 값을 다르게 사용하면 public String bbs_write_ok(BbsBean
        bbsbean) throws Exception{ MultipartFile uploadfile = bbsbean.get
        ==> NullPointerException 발생 }-->
        
   <bean id="multipartResolver"
   class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
   <!-- 1024 * 1024 * 10 bytes : 10MB -->
   <property name="maxUploadSize" value="10485760"></property>

   </bean>

	<!-- maxUploadSize : 한번의 Request로 전달될 수 있는 최대의 크기를 의미합니다. name = "maxUploadSize"를 
		지정하지 않으면 기본으로 "-1"이 설정되는데 파일 크기가 무제한이라는 의미입니다. -->
		
		
		
	<mvc:interceptors>  
        <mvc:interceptor>       
        	<!-- 특정 페이지 지정 -->
            <mvc:mapping path="/admin/**"/>  
            <bean class="com.blog.yeonji.util.LoginCheckInterceptor" />  
        </mvc:interceptor>  
    </mvc:interceptors>  
</beans>
